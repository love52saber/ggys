<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.seocoo.ggys.module.emchant.mapper.EmchantMessageMapper">
    <resultMap id="BaseResultMap" type="net.seocoo.ggys.module.emchant.entity.EmchantMessageDO">
        <id column="id" property="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result column="uuid" property="uuid" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="from_user" property="fromUser" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="to_user" property="toUser" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="state" property="state" javaType="net.seocoo.ggys.module.emchant.constans.ReadStateEnum" jdbcType="VARCHAR" />
        <result column="type" property="type" javaType="net.seocoo.ggys.module.emchant.constans.MessageTypeEnum" jdbcType="VARCHAR" />
        <result column="txt_msg" property="txtMsg" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="img_msg" property="imgMsg" javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
        <result column="create_user_id" property="createUserId" javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result column="update_date" property="updateDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
        <result column="update_user_id" property="updateUserId" javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result column="can_deleted" property="canDeleted" javaType="net.seocoo.ggys.core.constants.YesNoEnum" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
    id, uuid, from_user, to_user, state, type, txt_msg, img_msg, create_date, create_user_id,
    update_date, update_user_id, can_deleted
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from emchant_message
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emchant_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="net.seocoo.ggys.module.emchant.entity.EmchantMessageDO">
    insert into emchant_message (id, uuid, from_user,
      to_user, state, type,
      txt_msg, img_msg, create_date,
      create_user_id, update_date, update_user_id,
      can_deleted)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{fromUser,jdbcType=VARCHAR},
      #{toUser,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{txtMsg,jdbcType=VARCHAR}, #{imgMsg,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER},
      #{canDeleted,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true"  parameterType="net.seocoo.ggys.module.emchant.entity.EmchantMessageDO">
        insert into emchant_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uuid != null">
                uuid,
            </if>
            <if test="fromUser != null">
                from_user,
            </if>
            <if test="toUser != null">
                to_user,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="txtMsg != null">
                txt_msg,
            </if>
            <if test="imgMsg != null">
                img_msg,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="canDeleted != null">
                can_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="fromUser != null">
                #{fromUser,jdbcType=VARCHAR},
            </if>
            <if test="toUser != null">
                #{toUser,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="txtMsg != null">
                #{txtMsg,jdbcType=VARCHAR},
            </if>
            <if test="imgMsg != null">
                #{imgMsg,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="canDeleted != null">
                #{canDeleted,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="net.seocoo.ggys.module.emchant.entity.EmchantMessageDO">
        update emchant_message
        <set>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="fromUser != null">
                from_user = #{fromUser,jdbcType=VARCHAR},
            </if>
            <if test="toUser != null">
                to_user = #{toUser,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="txtMsg != null">
                txt_msg = #{txtMsg,jdbcType=VARCHAR},
            </if>
            <if test="imgMsg != null">
                img_msg = #{imgMsg,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="canDeleted != null">
                can_deleted = #{canDeleted,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.seocoo.ggys.module.emchant.entity.EmchantMessageDO">
    update emchant_message
    set uuid = #{uuid,jdbcType=VARCHAR},
      from_user = #{fromUser,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      txt_msg = #{txtMsg,jdbcType=VARCHAR},
      img_msg = #{imgMsg,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      can_deleted = #{canDeleted,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--自定义sql-->
    <delete id="delete" parameterType="java.lang.Integer">
        update  emchant_message
        set can_deleted = 'Y'
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="list"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from emchant_message
    </select>

    <select id="listQuery" parameterType="net.seocoo.ggys.core.base.BaseQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from emchant_message
        <include refid="Base_Where" />
        <if test="orderBy != null and orderBy != ''">
            order by ${orderBy}
        </if>
    </select>


    <select id="countQuery" parameterType="net.seocoo.ggys.core.base.BaseQuery" resultType="java.lang.Integer">
        select count(*)
        from emchant_message
        <include refid="Base_Where"/>
    </select>

    <select id="countUnRead" parameterType="net.seocoo.ggys.core.base.BaseQuery" resultType="java.lang.Integer">
        select count(*)
        from emchant_message
        where 1=1 and can_deleted = 'N'
        and state = #{state,jdbcType=VARCHAR}
        and to_user = #{toUser,jdbcType=VARCHAR}
    </select>

    <update id="updateRead" parameterType="net.seocoo.ggys.module.emchant.entity.EmchantMessageDO">
    update emchant_message
    set state = #{state,jdbcType=VARCHAR}
    where 1=1 and can_deleted = 'N'
    and  from_user = #{fromUser,jdbcType=VARCHAR}
    and   to_user = #{toUser,jdbcType=VARCHAR}
  </update>


   <select id="listMessageUser" parameterType="net.seocoo.ggys.core.base.BaseQuery" resultType="net.seocoo.ggys.module.emchant.dto.EmchantMessageUserDTO" >
       SELECT message.from_user as fromUser,
       MAX(CASE message.state WHEN #{readState,jdbcType=VARCHAR} THEN message.count ELSE 0 END ) readCount,
       MAX(CASE message.state WHEN #{unReadState,jdbcType=VARCHAR} THEN message.count ELSE 0 END ) unReadCount
       from (
       SELECT
       from_user,
       state,
       count(state) count
       FROM
       emchant_message
       WHERE
        to_user = #{toUser,jdbcType=VARCHAR}
       GROUP BY
       from_user,
       state
       HAVING
       from_user <![CDATA[ <> ]]> #{toUser,jdbcType=VARCHAR}
       ) message
       GROUP BY from_user
   </select>

   <select id="lastMessageByFromUser" parameterType="hashmap" resultMap="BaseResultMap">
       select
       <include refid="Base_Column_List" />
       from emchant_message
       WHERE 1=1 and can_deleted = 'N'
       and from_user = #{fromUser,jdbcType=VARCHAR}
       and to_user = #{toUser,jdbcType=VARCHAR}
      <!-- AND state = 'UN_READ'-->
       ORDER BY
       id DESC
       LIMIT 0,1
   </select>


    <sql id="Base_Where">
        where 1=1 and can_deleted = 'N'
        <if test="id != null">
            and  id = #{id,jdbcType=INTEGER}
        </if>
        <if test="uuid != null">
            and  uuid = #{uuid,jdbcType=CHAR}
        </if>
        <if test="fromUser != null and toUser !=null ">
            and  from_user in ( #{fromUser,jdbcType=CHAR} ,#{toUser,jdbcType=CHAR})
            and  to_user in ( #{fromUser,jdbcType=CHAR} ,#{toUser,jdbcType=CHAR})
        </if>

    </sql>
</mapper>